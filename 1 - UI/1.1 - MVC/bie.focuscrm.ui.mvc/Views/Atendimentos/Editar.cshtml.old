@model bie.focuscrm.ui.viewmodel.AtendimentoViewmodel


@{
    ViewBag.Title = "Editar Atendimento";
    ViewBag.HeaderText = ViewBag.Title;

    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("editar", "atendimentos", FormMethod.Post, new { @id = "frmMain", @enctype = "multipart/form-data" }))
{
    if (ViewBag.PodeEditar)
    {

        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.id_atendimento)


    }


    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3>Dados do Atendimento</h3>
            </div>

            <div class="panel-body">

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.id_empresa, htmlAttributes: new { @class = "control-label col-sm-3", @style = "" })
                        <div class="col-sm-6">
                            @Html.DropDownList("id_empresa", (IEnumerable<SelectListItem>)ViewBag.Empresas, "-Selecione-", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_empresa, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.id_filial, htmlAttributes: new { @class = "control-label col-sm-3 ", @style = "" })
                        <div class="col-sm-6">

                            @if (Model == null) //Create
                            {
                                @Html.DropDownList("id_filial", new List<SelectListItem>(), "Selecione uma empresa", new { @class = "form-control", @disabled = "disabled" })
                            }
                            else //Edit
                            {
                                @Html.DropDownList("id_filial", (IEnumerable<SelectListItem>)ViewBag.Filiais, "Selecione uma empresa", new { @class = "form-control" })

                            }

                            @Html.ValidationMessageFor(model => model.id_filial, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.id_usuariocliente, htmlAttributes: new { @class = "control-label col-sm-3 ", @style = "" })
                        <div class="col-sm-6">

                            @if (Model == null) //Create
                            {
                                @Html.DropDownList("id_usuariocliente", new List<SelectListItem>(), "Selecione uma empresa", new { @class = "form-control", @disabled = "disabled" })
                            }
                            else //Edit
                            {
                                @Html.DropDownList("id_usuariocliente", (IEnumerable<SelectListItem>)ViewBag.UsuariosCliente, "Selecione uma empresa", new { @class = "form-control" })

                            }

                            @Html.ValidationMessageFor(model => model.id_usuariocliente, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.id_setor, htmlAttributes: new { @class = "control-label col-sm-3", @style = "" })
                        <div class="col-sm-6">
                            @Html.DropDownList("id_setor", (IEnumerable<SelectListItem>)ViewBag.Setores, "-Selecione-", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.id_setor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if (ViewBag.TipoUsuarioAtual != "Setor")
                    {

                        if (Model == null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.id_usuarioresponsavel, htmlAttributes: new { @class = "control-label col-sm-3", @style = "" })
                                <div class="col-sm-6">
                                    @Html.DropDownList("id_usuarioresponsavel", new List<SelectListItem>(), "-Selecione o setor-", new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.id_usuarioresponsavel, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.id_usuarioresponsavel, htmlAttributes: new { @class = "control-label col-sm-3", @style = "" })
                                <div class="col-sm-6">
                                    @Html.DropDownList("id_usuarioresponsavel", (IEnumerable<SelectListItem>)ViewBag.Usuarios, "-Selecione-", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.id_usuarioresponsavel, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        }

                    }





                    <div class="form-group">
                        @Html.LabelFor(model => model.DataAgendada, htmlAttributes: new { @class = "control-label col-sm-3 ", @style = "" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.DataAgendada, new { htmlAttributes = new { @class = "form-control dtp", @style = "" } })
                            @Html.ValidationMessageFor(model => model.DataAgendada, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.Assunto, htmlAttributes: new { @class = "control-label col-sm-3 ", @style = "" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control", @style = "" } })
                            @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
                        </div>
                    </div>











                </div>
            </div>


            <div class="panel-body">

                <div class="col-sm-6 col-sm-offset-3 text-right btn-container">

                    @if (ViewBag.PodeEditar)
                    {
                        <button type="submit" class="btn btn-space btn-primary">Salvar</button>

                        <a href="@Url.Action("Index")" class="btn btn-space btn-default">
                            Cancelar
                        </a>
                    }

                </div>


            </div>






        </div>
    </div>

}



<div>
    @Html.ActionLink("Voltar para a lista", "Index")
</div>





@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/datetimepicker/jquery.datetimepicker.full.min.js"></script>
    <link href="~/Scripts/datetimepicker/jquery.datetimepicker.min.css" rel="stylesheet" />



    <script type="text/javascript">

        $(document).ready(function () {

            montaCascade({
                pai: $("#id_empresa"),
                filho: $("#id_filial"),
                filho2: $("#id_usuariocliente"),
                endpoint_filho: '@Url.Content("~/atendimentos/getfiliais/")',
                endpoint_filho2: '@Url.Content("~/atendimentos/getusuariosempresa/")',
                valueFilho: "id_filial",
                valueFilho2: "id_usuario",
                displayFilho: "Nome",
                textopai: "Selecione uma empresa"
            });

            montaCascade({
                pai: $("#id_setor"),
                filho: $("#id_usuarioresponsavel"),
                endpoint_filho: '@Url.Content("~/atendimentos/getusuarios/")',
                valueFilho: "id_usuario",
                displayFilho: "Nome",
                textopai: "Selecione o setor"
            });




            $(".dtp").datetimepicker({
                format: 'd/m/Y H:i:s',
                //format: 'd/m/Y',
                lang: 'pt-BR',
                closeOnDateSelect: true

            });

            $.datetimepicker.setLocale('pt-BR');



            //verifica se pode editar
            @if (!ViewBag.PodeEditar)
            {
                @:$(".form-control").attr("disabled", "disabled");
                        }



        }); //rdy






        var montaCascade = function (cfg) {

            if (!($(cfg.filho).length > 0)) return;

            $(cfg.pai).change(function () {

                if ($(cfg.pai).val() == "0" || $(cfg.pai).val() == "") {
                    $(cfg.filho).html("<option value='-1'>cfg.textopai</option>").attr("disabled", "disabled");
                    return;
                };

                //carrega os filhos
                var url = cfg.endpoint_filho + $(cfg.pai).val();
                var strFilhos = "<option value='-1'>-Selecione-</option>";

                $.getJSON(url,
                    function (dados) {
                        $.each(dados,
                            function (idx, obj) {
                                strFilhos += "<option value='" + $(obj).attr(cfg.valueFilho) + "'>" + $(obj).attr(cfg.displayFilho) + "</option>";
                            }
                        );//each

                        $(cfg.filho).html(strFilhos).removeAttr("disabled");
                    });//completefunc

            });//pai.change
        }








    </script>


}

